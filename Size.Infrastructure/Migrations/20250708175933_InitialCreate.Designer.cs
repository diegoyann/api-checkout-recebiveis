// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Size.Infrastructure.Data;

#nullable disable

namespace Size.Infrastructure.Migrations
{
    [DbContext(typeof(SizeContext))]
    [Migration("20250708175933_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Size.Domain.Entities.CarrinhoAntecipacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.ToTable("CarrinhosAntecipacao");
                });

            modelBuilder.Entity("Size.Domain.Entities.Empresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("FaturamentoMensal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("RamoEmpresa")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Cnpj")
                        .IsUnique();

                    b.ToTable("Empresas");
                });

            modelBuilder.Entity("Size.Domain.Entities.ItemCarrinhoAntecipacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CarrinhoAntecipacaoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataAdicao")
                        .HasColumnType("datetime2");

                    b.Property<int>("NotaFiscalId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NotaFiscalId");

                    b.HasIndex("CarrinhoAntecipacaoId", "NotaFiscalId")
                        .IsUnique();

                    b.ToTable("ItensCarrinhoAntecipacao");
                });

            modelBuilder.Entity("Size.Domain.Entities.NotaFiscal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataVencimento")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("Numero", "EmpresaId")
                        .IsUnique();

                    b.ToTable("NotasFiscais");
                });

            modelBuilder.Entity("Size.Domain.Entities.CarrinhoAntecipacao", b =>
                {
                    b.HasOne("Size.Domain.Entities.Empresa", "Empresa")
                        .WithMany("CarrinhosAntecipacao")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("Size.Domain.Entities.ItemCarrinhoAntecipacao", b =>
                {
                    b.HasOne("Size.Domain.Entities.CarrinhoAntecipacao", "CarrinhoAntecipacao")
                        .WithMany("Itens")
                        .HasForeignKey("CarrinhoAntecipacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Size.Domain.Entities.NotaFiscal", "NotaFiscal")
                        .WithMany("ItensCarrinho")
                        .HasForeignKey("NotaFiscalId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CarrinhoAntecipacao");

                    b.Navigation("NotaFiscal");
                });

            modelBuilder.Entity("Size.Domain.Entities.NotaFiscal", b =>
                {
                    b.HasOne("Size.Domain.Entities.Empresa", "Empresa")
                        .WithMany("NotasFiscais")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("Size.Domain.Entities.CarrinhoAntecipacao", b =>
                {
                    b.Navigation("Itens");
                });

            modelBuilder.Entity("Size.Domain.Entities.Empresa", b =>
                {
                    b.Navigation("CarrinhosAntecipacao");

                    b.Navigation("NotasFiscais");
                });

            modelBuilder.Entity("Size.Domain.Entities.NotaFiscal", b =>
                {
                    b.Navigation("ItensCarrinho");
                });
#pragma warning restore 612, 618
        }
    }
}
